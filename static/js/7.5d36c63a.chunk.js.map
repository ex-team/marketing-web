{"version":3,"sources":["components/services.tsx","pages/Blogs/Detail/hero-section.tsx","pages/Blogs/Detail/main-section.tsx","pages/Blogs/Detail/index.tsx"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","headers","common","interceptors","request","use","error","console","Promise","reject","Get","path","resolve","get","process","then","result","data","err","API","getBlogs","getDetailPost","slug","getCategoryBlogs","HeroSection","props","blog","useState","loading","setLoading","useEffect","load","setTimeout","clearTimeout","className","style","backgroundImage","featured_image","width","height","title","Date","created_at","toDateString","MainSection","state","body","author","username","tags","latest","prevProps","this","updateData","updateLatest","setState","map","idx","src","alt","dangerouslySetInnerHTML","__html","slice","shape","size","flex","to","React","Component","IndexDetail","params","scrollNavigation","doc","document","documentElement","top","window","pageYOffset","scrollTop","clientTop","topnavEl","getElementById","classList","add","remove","getLatest","catch","e","bind","getData","addEventListener","history","location","pathname","match","url","removeEventListener","Fragment"],"mappings":"iHAAA,qBAGAA,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAChCH,IAAMC,SAASG,QAAQC,OAAO,oBAAsB,iBACpDL,IAAMM,aAAaC,QAAQC,KACzB,SAAAD,GACE,OAAOA,KAET,SAAAE,GAEE,OADAC,QAAQD,MAAMA,GACPE,QAAQC,OAAOH,MAI1B,IAEMI,EAAM,SAACC,GACX,OAAO,IAAIH,SAAe,SAACI,EAASH,GAClCZ,IAAMgB,IAAN,UAJaC,kCAIb,YAAyBH,IAAQI,MAC/B,SAAAC,GACEJ,EAAQI,EAAOC,SAEjB,SAAAC,GACET,EAAOS,UAWTC,EAAM,CACVC,SALe,kBAAMV,EAAI,sCAMzBW,cALoB,SAAAC,GAAI,OAAIZ,EAAI,QAAD,OAASY,EAAT,OAM/BC,iBALuB,kBAAMb,EAAI,eAQpBS,O,wICIAK,MA5Bf,SAAqBC,GACnB,IAAMC,EAAOD,EAAMR,KACnB,EAA8BU,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAOA,OANAC,qBAAU,WACR,IAAMC,EAAOC,YAAW,WACtBH,GAAW,KACV,KACH,OAAO,kBAAMI,aAAaF,OAG1B,qBAAKG,UAAU,iBAAiBC,MAAO,CAAEC,gBAAgB,OAAD,OAASV,EAAKW,eAAd,MAAxD,SACGT,EACC,sBAAKM,UAAU,2CAAf,UACE,cAAC,IAAD,CAAUI,MAAM,OAAOC,OAAO,OAAOL,UAAU,kBAC/C,cAAC,IAAD,CAAUI,MAAM,OAAOJ,UAAU,kBACjC,cAAC,IAAD,CAAUI,MAAM,OAAOJ,UAAU,qBAGnC,sBAAKA,UAAU,wCAAf,UACE,6BAAKR,EAAKc,QACV,uBAAMN,UAAU,OAAhB,UACE,mBAAGA,UAAU,0BADf,IAC6C,IAAIO,KAAKf,EAAKgB,YAAYC,wB,QCqHlEC,E,4MAhIbC,MAAQ,CACN5B,KAAM,CAAEuB,MAAO,GAAIM,KAAM,GAAIT,eAAgB,GAAIU,OAAQ,CAAEC,SAAU,KACrEC,KAAM,GACNC,OAAQ,GACRtB,SAAS,G,wDAGX,SAAmBuB,GACbA,IAAcC,KAAK3B,QACrB2B,KAAKC,aACLD,KAAKvB,aACLuB,KAAKE,kB,wBAIT,WACE,IAAMrC,EAAOmC,KAAK3B,MAAMR,KACxBmC,KAAKG,SAAS,CACZtC,KAAMA,EACNgC,KAAMhC,EAAKgC,S,0BAIf,WACE,IAAMhC,EAAOmC,KAAK3B,MAAMyB,OACxBE,KAAKG,SAAS,CACZL,OAAQjC,M,wBAIZ,WAAc,IAAD,OACXe,YAAW,WACT,EAAKuB,SAAS,CAAE3B,SAAS,MACxB,O,oBAGL,WAAU,IAAD,OACP,OACE,qBAAKM,UAAU,iBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,sBAAKA,UAAU,4BAAf,UACGkB,KAAKP,MAAMjB,QACV,sBAAKM,UAAU,iBAAf,UACE,cAAC,IAAD,CAAUI,MAAM,MAAMC,OAAO,OAAOL,UAAU,kBAC9C,cAAC,IAAD,CAAUI,MAAM,MAAMC,OAAO,YAG/B,sBAAKL,UAAU,iBAAf,UACE,6BAAKkB,KAAKP,MAAM5B,KAAKuB,QACrB,sBAAKN,UAAU,OAAf,UACE,mBAAGA,UAAU,sBADf,IACyCkB,KAAKP,MAAM5B,KAAK8B,OAAOC,SADhE,KAC4E,IAC1E,mBAAGd,UAAU,eACb,6BACGkB,KAAKP,MAAMI,KAAKO,KAAI,SAACvC,EAAWwC,GAAZ,OACnB,qBAAIvB,UAAU,OAAd,UACGjB,EAAKuB,MADR,MAA0BiB,cAQpC,qBAAKvB,UAAU,iBAAf,SACGkB,KAAKP,MAAMjB,QACV,cAAC,IAAD,CAAUU,MAAM,OAAOC,OAAO,SAE9B,qBAAKL,UAAU,aAAawB,IAAKN,KAAKP,MAAM5B,KAAKoB,eAAgBsB,IAAKP,KAAKP,MAAM5B,KAAKuB,UAGzFY,KAAKP,MAAMjB,QACV,gCACE,cAAC,IAAD,CAAUU,MAAM,OAAOJ,UAAU,WACjC,cAAC,IAAD,CAAUI,MAAM,OAAOJ,UAAU,WACjC,cAAC,IAAD,CAAUI,MAAM,OAAOJ,UAAU,cAGnC,mBAAGA,UAAU,iBAAiB0B,wBAAyB,CAAEC,OAAQT,KAAKP,MAAM5B,KAAK6B,WAGrF,sBAAKZ,UAAU,6BAAf,UACE,8CACA,qBAAKA,UAAU,yBAAf,SACE,oBAAIA,UAAU,cAAd,SACGkB,KAAKP,MAAMK,OAAOY,MAAM,EAAG,GAAGN,KAAI,SAACvC,EAAWwC,GAC7C,OAAI,EAAKZ,MAAMjB,QAEX,oBAAcM,UAAU,SAAxB,SACE,sBAAKA,UAAU,WAAf,UACE,cAAC,IAAD,CAAU6B,MAAM,SAASC,KAAK,OAAO9B,UAAU,WAC/C,sBAAKC,MAAO,CAAE8B,KAAM,KAApB,UACE,cAAC,IAAD,CAAU3B,MAAM,OAAOJ,UAAU,WACjC,cAAC,IAAD,CAAUI,MAAM,eALbmB,GAYT,oBAAcvB,UAAU,SAAxB,SACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,qBAAKwB,IAAKzC,EAAKoB,eAAgBsB,IAAK1C,EAAKuB,YAG7C,qBAAKN,UAAU,UAAf,SACE,sBAAKA,UAAU,gBAAgBC,MAAO,CAAE8B,KAAM,KAA9C,UACE,6BACE,cAAC,IAAD,CAAMC,GAAIjD,EAAKK,KAAf,SAAsBL,EAAKuB,UAE7B,qBAAKN,UAAU,OAAO0B,wBAAyB,CAAEC,OAAQ5C,EAAK6B,iBAZ7DW,wB,GApGPU,IAAMC,WCV1BC,E,kDAMJ,WAAY5C,GAAa,IAAD,8BACtB,cAAMA,IANA6C,YAKgB,IAJxBzB,MAA0B,CACxBnB,KAAM,GACNwB,OAAQ,IAEc,EAkBxBqB,iBAAmB,WACjB,IAAMC,EAAMC,SAASC,gBACfC,GAAOC,OAAOC,aAAeL,EAAIM,YAAcN,EAAIO,WAAa,GAChEC,EAAWP,SAASQ,eAAe,UACrCN,EAAM,GACA,OAARK,QAAQ,IAARA,KAAUE,UAAUC,IAAI,cAEhB,OAARH,QAAQ,IAARA,KAAUE,UAAUE,OAAO,eAzBP,EAyCxBC,UAAY,WACVlE,IAAIC,WACDL,MAAK,SAAAC,GACJ,EAAKuC,SAAS,CACZL,OAAO,YAAKlC,QAGfsE,OAAM,SAAAC,GACLhF,QAAQD,MAAMiF,OA/ClB,EAAKhB,iBAAmB,EAAKA,iBAAiBiB,KAAtB,gBAFF,E,qDAIxB,WACEpC,KAAKqC,UACLrC,KAAKiC,YACLT,OAAOc,iBAAiB,SAAUtC,KAAKmB,kBAAkB,K,gCAG3D,SAAmBpB,GACbA,EAAUwC,QAAQC,SAASC,WAAazC,KAAKkB,OAAOwB,MAAMC,KAC5D3C,KAAKqC,Y,kCAGT,WACEb,OAAOoB,oBAAoB,SAAU5C,KAAKmB,kBAAkB,K,qBAa9D,WAAW,IAAD,OACRnB,KAAKkB,OAASlB,KAAK3B,MACnB,IAAMH,EAAO8B,KAAKkB,OAAOwB,MAAMxB,OAAOhD,KAClC8B,KAAKkB,OAAOwB,OAASxE,GACvBH,IAAIE,cAAcC,GAAMP,MAAK,SAAAC,GAC3B,EAAKuC,SAAS,CACZ7B,KAAMV,S,oBAkBd,WACE,OACE,eAAC,IAAMiF,SAAP,WACE,cAAC,EAAD,CAAahF,KAAMmC,KAAKP,MAAMnB,OAC9B,cAAC,EAAD,CAAaT,KAAMmC,KAAKP,MAAMnB,KAAMwB,OAAQE,KAAKP,MAAMK,gB,GA/DrCkB,aAoEXC","file":"static/js/7.5d36c63a.chunk.js","sourcesContent":["import axios from 'axios';\n\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\naxios.interceptors.request.use(\n  request => {\n    return request;\n  },\n  error => {\n    console.error(error);\n    return Promise.reject(error);\n  }\n);\n\nconst RootPath = process.env.REACT_APP_API_URL;\n\nconst Get = (path: string) => {\n  return new Promise<any[]>((resolve, reject) => {\n    axios.get(`${RootPath}/${path}`).then(\n      result => {\n        resolve(result.data);\n      },\n      err => {\n        reject(err);\n      }\n    );\n  });\n};\n\n// const getBlogs = () => Get('post/?limit=0&offset=0&type=blogs');\nconst getBlogs = () => Get('post/?limit=0&offset=0&type=blogs');\nconst getDetailPost = slug => Get(`post/${slug}/`);\nconst getCategoryBlogs = () => Get('category/');\n\nconst API = {\n  getBlogs,\n  getDetailPost,\n  getCategoryBlogs,\n};\n\nexport default API;\n","import React, { useEffect, useState } from 'react';\n\nimport { Skeleton } from 'primereact/skeleton';\n\nexport interface Props {\n  data: {\n    id: number;\n    title: string;\n    slug: string;\n    categories: any;\n    featured_image: string;\n    author: {\n      username: string;\n    };\n    created_at: string;\n    updated_at: string;\n  };\n}\nfunction HeroSection(props: Props) {\n  const blog = props.data;\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const load = setTimeout(() => {\n      setLoading(false);\n    }, 600);\n    return () => clearTimeout(load);\n  });\n  return (\n    <div className=\"hero-container\" style={{ backgroundImage: `url(${blog.featured_image})` }}>\n      {loading ? (\n        <div className=\"container title-heading p-justify-center\">\n          <Skeleton width=\"100%\" height=\"30px\" className=\"p-mb-2 p-mt-2\" />\n          <Skeleton width=\"100%\" className=\"p-mb-2 p-mt-2\" />\n          <Skeleton width=\"100%\" className=\"p-mb-2 p-mt-2\" />\n        </div>\n      ) : (\n        <div className=\"container title-heading p-text-center\">\n          <h1>{blog.title}</h1>\n          <span className=\"meta\">\n            <i className=\"pi pi-calendar p-mr-2\"></i> {new Date(blog.created_at).toDateString()}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}\nexport default HeroSection;\n","import React from 'react';\n\nimport { Skeleton } from 'primereact/skeleton';\nimport { Link } from 'react-router-dom';\n\nexport interface Props {\n  data: {\n    author: any;\n    body: string;\n    categories: any;\n    comment_count: number;\n    configs: string;\n    created_at: string;\n    deleted_at: string;\n    description: string;\n    featured_image: string;\n    id: number;\n    published: boolean;\n    published_at: string;\n    slug: string;\n    tags: any;\n    title: string;\n    type: string;\n    updated_at: string;\n  };\n  latest: any;\n}\nclass MainSection extends React.Component<Props, {}> {\n  state = {\n    data: { title: '', body: '', featured_image: '', author: { username: '' } },\n    tags: [],\n    latest: [],\n    loading: true,\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps !== this.props) {\n      this.updateData();\n      this.setLoading();\n      this.updateLatest();\n    }\n  }\n\n  updateData() {\n    const data = this.props.data;\n    this.setState({\n      data: data,\n      tags: data.tags,\n    });\n  }\n\n  updateLatest() {\n    const data = this.props.latest;\n    this.setState({\n      latest: data,\n    });\n  }\n\n  setLoading() {\n    setTimeout(() => {\n      this.setState({ loading: false });\n    }, 700);\n  }\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <div className=\"container\">\n          <div className=\"content-container p-grid\">\n            <div className=\"left-content p-col p-lg-8\">\n              {this.state.loading ? (\n                <div className=\"heading p-mb-4\">\n                  <Skeleton width=\"75%\" height=\"30px\" className=\"p-mb-2 p-mt-2\" />\n                  <Skeleton width=\"50%\" height=\"10px\" />\n                </div>\n              ) : (\n                <div className=\"heading p-mb-4\">\n                  <h1>{this.state.data.title}</h1>\n                  <div className=\"meta\">\n                    <i className=\"pi pi-user p-mr-2\"></i> {this.state.data.author.username} |{' '}\n                    <i className=\"pi pi-tags\"></i>\n                    <ul>\n                      {this.state.tags.map((data: any, idx) => (\n                        <li className=\"tags\" key={idx}>\n                          {data.title},\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              )}\n              <div className=\"featured-image\">\n                {this.state.loading ? (\n                  <Skeleton width=\"100%\" height=\"100%\" />\n                ) : (\n                  <img className=\"p-shadow-3\" src={this.state.data.featured_image} alt={this.state.data.title} />\n                )}\n              </div>\n              {this.state.loading ? (\n                <div>\n                  <Skeleton width=\"100%\" className=\"p-mt-2\"/>\n                  <Skeleton width=\"100%\" className=\"p-mt-2\"/>\n                  <Skeleton width=\"100%\" className=\"p-mt-2\"/>\n                </div>\n              ) : (\n                <p className=\"p-text-justify\" dangerouslySetInnerHTML={{ __html: this.state.data.body }}></p>\n              )}\n            </div>\n            <div className=\"right-content p-col p-lg-4\">\n              <h5>Recent Blogs</h5>\n              <div className=\"custom-skeleton p-pt-4\">\n                <ul className=\"p-m-0 p-p-0\">\n                  {this.state.latest.slice(0, 5).map((data: any, idx) => {\n                    if (this.state.loading) {\n                      return (\n                        <li key={idx} className=\"p-mb-3\">\n                          <div className=\"p-d-flex\">\n                            <Skeleton shape=\"circle\" size=\"4rem\" className=\"p-mr-2\" />\n                            <div style={{ flex: '1' }}>\n                              <Skeleton width=\"100%\" className=\"p-mb-2\" />\n                              <Skeleton width=\"75%\" />\n                            </div>\n                          </div>\n                        </li>\n                      );\n                    } else {\n                      return (\n                        <li key={idx} className=\"p-mb-3\">\n                          <div className=\"p-grid blogs\">\n                            <div className=\"p-col-3\">\n                              <div className=\"thumbnail-blog p-shadow-3\">\n                                <img src={data.featured_image} alt={data.title} />\n                              </div>\n                            </div>\n                            <div className=\"p-col-9\">\n                              <div className=\"heading-blogs\" style={{ flex: '1' }}>\n                                <h1>\n                                  <Link to={data.slug}>{data.title}</Link>\n                                </h1>\n                                <div className=\"body\" dangerouslySetInnerHTML={{ __html: data.body }}></div>\n                              </div>\n                            </div>\n                          </div>\n                        </li>\n                      );\n                    }\n                  })}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default MainSection;\n","import React, { Component } from 'react';\n\n\n\nimport { RouteComponentProps } from 'react-router-dom';\n\n\n\nimport API from '../../../components/services';\nimport HeroSection from './hero-section';\nimport MainSection from './main-section';\n\nexport interface IndexDetailState {\n  blog: any;\n  latest: any;\n}\n\nclass IndexDetail extends Component<RouteComponentProps, IndexDetailState> {\n  private params: any;\n  state: IndexDetailState = {\n    blog: {},\n    latest: [],\n  };\n  constructor(props: any) {\n    super(props);\n    this.scrollNavigation = this.scrollNavigation.bind(this);\n  }\n  componentDidMount() {\n    this.getData();\n    this.getLatest();\n    window.addEventListener('scroll', this.scrollNavigation, true);\n  }\n\n  componentDidUpdate(prevProps: RouteComponentProps) {\n    if (prevProps.history.location.pathname !== this.params.match.url) {\n      this.getData();\n    }\n  }\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.scrollNavigation, true);\n  }\n  scrollNavigation = () => {\n    const doc = document.documentElement;\n    const top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    const topnavEl = document.getElementById('topnav');\n    if (top > 80) {\n      topnavEl?.classList.add('nav-sticky');\n    } else {\n      topnavEl?.classList.remove('nav-sticky');\n    }\n  };\n\n  getData() {\n    this.params = this.props;\n    const slug = this.params.match.params.slug;\n    if (this.params.match && slug) {\n      API.getDetailPost(slug).then(result => {\n        this.setState({\n          blog: result,\n        });\n      });\n    }\n  }\n\n  getLatest = () => {\n    API.getBlogs()\n      .then(result => {\n        this.setState({\n          latest: [...result],\n        });\n      })\n      .catch(e => {\n        console.error(e);\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <HeroSection data={this.state.blog} />\n        <MainSection data={this.state.blog} latest={this.state.latest} />\n      </React.Fragment>\n    );\n  }\n}\nexport default IndexDetail;\n"],"sourceRoot":""}