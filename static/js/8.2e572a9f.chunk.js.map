{"version":3,"sources":["components/services.tsx","pages/Blogs/hero-section.tsx","pages/Blogs/main-section.tsx","pages/Blogs/index.tsx"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","headers","common","interceptors","request","use","error","console","Promise","reject","Get","path","resolve","get","process","then","result","data","err","API","getBlogs","getDetailPost","slug","getCategoryBlogs","HeroSection","props","useState","loading","setLoading","useEffect","load","setTimeout","clearTimeout","className","style","backgroundImage","banner","width","height","heading","subheading","MainSection","state","results","basicFirst","basicRows","pageNumber","searchKey","sortKey","sortOptions","onPageChange","event","setState","first","page","newSlice","slice","window","scrollTo","top","behavior","getSearch","e","value","target","newBlog","filter","Object","values","join","toLowerCase","includes","onSortCategory","updatedItems","categories","find","c","prevProps","this","updateData","updateCategory","reValueCategory","map","res","id","label","title","options","placeholder","onChange","blog","idx","category","to","match","url","src","featured_image","alt","author","username","Date","created_at","toDateString","dangerouslySetInnerHTML","__html","body","replace","rows","totalRecords","React","Component","withRouter","Index","pages","dataPages","blogs","getPostAPI","catch","descRes","sort","a","b","reverse","length","scrollNavigation","doc","document","documentElement","pageYOffset","scrollTop","clientTop","topnavEl","getElementById","classList","add","remove","bind","addEventListener","removeEventListener","Fragment"],"mappings":"iHAAA,qBAGAA,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAChCH,IAAMC,SAASG,QAAQC,OAAO,oBAAsB,iBACpDL,IAAMM,aAAaC,QAAQC,KACzB,SAAAD,GACE,OAAOA,KAET,SAAAE,GAEE,OADAC,QAAQD,MAAMA,GACPE,QAAQC,OAAOH,MAI1B,IAEMI,EAAM,SAACC,GACX,OAAO,IAAIH,SAAe,SAACI,EAASH,GAClCZ,IAAMgB,IAAN,UAJaC,kCAIb,YAAyBH,IAAQI,MAC/B,SAAAC,GACEJ,EAAQI,EAAOC,SAEjB,SAAAC,GACET,EAAOS,UAWTC,EAAM,CACVC,SANe,kBAAMV,EAAI,sCAOzBW,cALoB,SAAAC,GAAI,OAAIZ,EAAI,QAAD,OAASY,EAAT,OAM/BC,iBALuB,kBAAMb,EAAI,eAQpBS,O,gJCFAK,MAzBf,SAAqBC,GACnB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAOA,OANAC,qBAAU,WACR,IAAMC,EAAOC,YAAW,WACtBH,GAAW,KACV,KACH,OAAO,kBAAMI,aAAaF,OAG1B,qBAAKG,UAAU,iBAAiBC,MAAO,CAAEC,gBAAgB,OAAD,OAASV,EAAMR,KAAKmB,OAApB,MAAxD,SACGT,EACC,sBAAKM,UAAU,2CAAf,UACE,cAAC,IAAD,CAAUI,MAAM,OAAOC,OAAO,OAAOL,UAAU,kBAC/C,cAAC,IAAD,CAAUI,MAAM,OAAOJ,UAAU,kBACjC,cAAC,IAAD,CAAUI,MAAM,OAAOJ,UAAU,qBAGnC,sBAAKA,UAAU,wCAAf,UACE,6BAAKR,EAAMR,KAAKsB,UAChB,4BAAId,EAAMR,KAAKuB,mB,uCCjBnBC,E,4MACJC,MAAQ,CACNC,QAAS,GACTC,WAAY,EACZC,UAAW,EACXC,WAAY,EACZC,UAAW,GACXC,QAAS,GACTrB,SAAS,EACTsB,YAAa,I,EAqCfC,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZR,WAAYO,EAAME,MAClBP,WAAYK,EAAMG,OAGpB,IAAMC,EAAgB,YAAI,EAAK9B,MAAMR,MAAMuC,MACzCL,EAAMG,KAAO,EAAKZ,MAAMG,UACxBM,EAAMG,KAAO,EAAKZ,MAAMG,UAAY,EAAKH,MAAMG,WAEjD,EAAKO,SAAS,CAAET,QAASY,IACzBE,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,Y,EAGtCC,UAAY,SAACC,GACX,IAAMC,EAAQD,EAAEE,OAAOD,MAEvB,GADA,EAAKX,SAAS,CAAEL,UAAWgB,IACb,KAAVA,EAAc,CAChB,IAAME,EAAU,YAAI,EAAKxC,MAAMR,MAAMiD,QAAO,SAACjD,GAC3C,OAAOkD,OAAOC,OAAOnD,GAAMoD,KAAK,KAAKC,cAAcC,SAASR,EAAMO,kBAEpE,EAAKlB,SAAS,CAAET,QAASsB,SAEzB,EAAKb,SAAS,CAAET,QAAS,EAAKlB,MAAMR,Q,EAIxCuD,eAAiB,SAAArB,GACf,IAAMY,EAAQZ,EAAMY,MAEpB,GADA,EAAKX,SAAS,CAAEJ,QAASe,IACX,QAAVA,EAAiB,CACnB,IAAMU,EAAe,YAAI,EAAKhD,MAAMR,MAAMiD,QAAO,SAAAjD,GAC/C,QAASA,EAAKyD,WAAWC,MAAK,SAAAC,GAAC,OAAIA,EAAEtD,OAASyC,QAEhD,EAAKX,SAAS,CAAET,QAAS8B,SAEzB,EAAKrB,SAAS,CAAET,QAAS,EAAKlB,MAAMR,Q,uDAtExC,c,gCAEA,SAAmB4D,GACbA,IAAcC,KAAKrD,QACrBqD,KAAKC,aACLD,KAAKE,iBACLF,KAAKlD,gB,wBAIT,WACE,IAAM4B,EAAa,YAAIsB,KAAKrD,MAAMR,MAAMuC,MACtCsB,KAAKpC,MAAMI,WAAagC,KAAKpC,MAAMG,UACnCiC,KAAKpC,MAAMI,WAAagC,KAAKpC,MAAMG,UAAYiC,KAAKpC,MAAMG,WAG5DiC,KAAK1B,SAAS,CAAET,QAASa,M,4BAG3B,WACE,IAAMyB,EAAkBH,KAAKrD,MAAMiD,WAAWQ,KAAI,SAAUC,GAC1D,MAAO,CAAEC,GAAID,EAAIC,GAAIC,MAAOF,EAAIG,MAAOvB,MAAOoB,EAAI7D,SAEpDwD,KAAK1B,SAAS,CAAEH,YAAY,GAAD,mBAAMgC,GAAN,CAAuB,CAAEG,GAAI,EAAGC,MAAO,eAAgBtB,MAAO,a,wBAG3F,WAAc,IAAD,OACXhC,YAAW,WACT,EAAKqB,SAAS,CAAEzB,SAAS,MACxB,O,kCAGL,c,oBA0CA,WAAU,IAAD,OACP,OACE,qBAAKM,UAAU,iBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,2BAAf,SACE,cAAC,IAAD,CACEsD,QAAST,KAAKpC,MAAMO,YACpBc,MAAOe,KAAKpC,MAAMM,QAClBwC,YAAY,iBACZC,SAAUX,KAAKN,mBAGnB,qBAAKvC,UAAU,iDAAf,SACE,qBAAKA,UAAU,SAAf,SACE,uBAAMA,UAAU,qBAAhB,UACE,mBAAGA,UAAU,iBACb,cAAC,IAAD,CAAWuD,YAAY,SAASJ,GAAG,SAASrB,MAAOe,KAAKpC,MAAMK,UAAW0C,SAAUX,KAAKjB,sBAKhG,sBAAK5B,UAAU,yBAAf,UACG6C,KAAKpC,MAAMf,QACV,sBAAKM,UAAU,SAAf,UACE,sBAAKA,UAAU,+BAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CAAUI,MAAM,OAAOC,OAAO,WAEhC,sBAAKL,UAAU,eAAf,UACE,cAAC,IAAD,CAAUI,MAAM,MAAMC,OAAO,OAAOL,UAAU,kBAC9C,cAAC,IAAD,CAAUI,MAAM,eAGpB,sBAAKJ,UAAU,+BAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CAAUI,MAAM,OAAOC,OAAO,WAEhC,sBAAKL,UAAU,eAAf,UACE,cAAC,IAAD,CAAUI,MAAM,MAAMC,OAAO,OAAOL,UAAU,kBAC9C,cAAC,IAAD,CAAUI,MAAM,eAGpB,sBAAKJ,UAAU,+BAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CAAUI,MAAM,OAAOC,OAAO,WAEhC,sBAAKL,UAAU,eAAf,UACE,cAAC,IAAD,CAAUI,MAAM,MAAMC,OAAO,OAAOL,UAAU,kBAC9C,cAAC,IAAD,CAAUI,MAAM,kBAKtB,qBAAKJ,UAAU,SAAf,SACG6C,KAAKpC,MAAMC,QAAQuC,KAAI,SAACQ,EAAWC,GAAZ,OACtB,sBAAe1D,UAAU,+BAAzB,UACE,sBAAKA,UAAU,wBAAf,UACE,6BACGyD,EAAKhB,WAAWQ,KAAI,SAACU,EAAeD,GAAhB,OACnB,6BACE,qBAAK1D,UAAU,gCAAf,SACE,sBAAMA,UAAU,iBAAhB,SAAkC2D,EAASN,WAFtCK,QAOb,cAAC,IAAD,CAAME,GAAE,UAAK,EAAKpE,MAAMqE,MAAMC,IAAtB,YAA6BL,EAAKpE,MAA1C,SACE,qBAAK0E,IAAKN,EAAKO,eAAgBC,IAAKR,EAAKJ,aAG7C,sBAAKrD,UAAU,eAAf,UACE,6BACE,cAAC,IAAD,CAAM4D,GAAE,UAAK,EAAKpE,MAAMqE,MAAMC,IAAtB,YAA6BL,EAAKpE,MAA1C,SAAmDoE,EAAKJ,UAE1D,uBAAMrD,UAAU,OAAhB,UACE,mBAAGA,UAAU,sBAAyB,IACb,MAAxByD,EAAKS,OAAOC,SAAmBV,EAAKS,OAAOC,SAAW,UAFzD,KAEsE,IACnE,IAAIC,KAAKX,EAAKY,YAAYC,kBAE7B,qBAAKtE,UAAU,cAAf,SACI,qBAAKA,UAAU,OAAOuE,wBAAyB,CAAEC,OAAQf,EAAKgB,KAAKC,QAAQ,kBAAmB,6CAzB5FhB,QAiChB,qBAAK1D,UAAU,sBAAf,SACE,cAAC,IAAD,CACEoB,MAAOyB,KAAKpC,MAAME,WAClBgE,KAAM9B,KAAKpC,MAAMG,UACjBgE,aAAc/B,KAAKrD,MAAMoF,aACzB3D,aAAc4B,KAAK5B,6B,GApLT4D,IAAMC,WA6LjBC,cAAWvE,GC7LpBwE,E,kDAOJ,WAAYxF,GAAY,IAAD,8BACrB,cAAMA,IAPRiB,MAAoB,CAClBwE,MAAOC,IAAU,GACjBC,MAAO,GACP1C,WAAY,GACZmC,aAAc,GAEO,EAWvBQ,WAAa,WACXlG,IAAII,mBACDR,MAAK,SAAAC,GACJ,EAAKoC,SAAS,CACZsB,WAAW,YAAK1D,QAGnBsG,OAAM,SAAAxD,GACLvD,QAAQD,MAAMwD,MAElB3C,IAAIC,WACDL,MAAK,SAAAC,GACJ,IAAMuG,EAAUvG,EAAOwG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAAGC,UAC7C,EAAKvE,SAAS,CACZgE,MAAM,YAAKG,GACXV,aAAc7F,EAAO4G,YAGxBN,OAAM,SAAAxD,GACLvD,QAAQD,MAAMwD,OA9BG,EAsCvB+D,iBAAmB,WACjB,IAAMC,EAAMC,SAASC,gBACfrE,GAAOF,OAAOwE,aAAeH,EAAII,YAAcJ,EAAIK,WAAa,GAChEC,EAAWL,SAASM,eAAe,UACrC1E,EAAM,GACA,OAARyE,QAAQ,IAARA,KAAUE,UAAUC,IAAI,cAEhB,OAARH,QAAQ,IAARA,KAAUE,UAAUE,OAAO,eA1C7B,EAAKX,iBAAmB,EAAKA,iBAAiBY,KAAtB,gBAHH,E,qDAMvB,WACEhF,OAAOiF,iBAAiB,SAAU5D,KAAK+C,kBAAkB,GACzD/C,KAAKuC,e,kCA0BP,WACE5D,OAAOkF,oBAAoB,SAAU7D,KAAK+C,kBAAkB,K,oBAa9D,WACE,OACE,eAAC,IAAMe,SAAP,WACE,cAAC,EAAD,CAAa3H,KAAM6D,KAAKpC,MAAMwE,QAC9B,cAAC,EAAD,CACEjG,KAAM6D,KAAKpC,MAAM0E,MACjB1C,WAAYI,KAAKpC,MAAMgC,WACvBmC,aAAc/B,KAAKpC,MAAM0E,MAAMQ,gB,GA9DrBb,aAoELE","file":"static/js/8.2e572a9f.chunk.js","sourcesContent":["import axios from 'axios';\n\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\naxios.interceptors.request.use(\n  request => {\n    return request;\n  },\n  error => {\n    console.error(error);\n    return Promise.reject(error);\n  }\n);\n\nconst RootPath = process.env.REACT_APP_API_URL;\n\nconst Get = (path: string) => {\n  return new Promise<any[]>((resolve, reject) => {\n    axios.get(`${RootPath}/${path}`).then(\n      result => {\n        resolve(result.data);\n      },\n      err => {\n        reject(err);\n      }\n    );\n  });\n};\n\nconst getBlogs = () => Get('post/?limit=0&offset=0&type=blogs');\n// const getBlogs = () => Get('post/');\nconst getDetailPost = slug => Get(`post/${slug}/`);\nconst getCategoryBlogs = () => Get('category/');\n\nconst API = {\n  getBlogs,\n  getDetailPost,\n  getCategoryBlogs,\n};\n\nexport default API;\n","import React, { useEffect, useState } from 'react';\n\nimport { Skeleton } from 'primereact/skeleton';\n\nexport interface Props {\n  data: {\n    id: number;\n    name: string;\n    heading: string;\n    subheading: string;\n    banner: string;\n    title: string;\n    description: string;\n  };\n}\nfunction HeroSection(props: Props) {\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const load = setTimeout(() => {\n      setLoading(false);\n    }, 600);\n    return () => clearTimeout(load);\n  });\n  return (\n    <div className=\"hero-container\" style={{ backgroundImage: `url(${props.data.banner})` }}>\n      {loading ? (\n        <div className=\"container title-heading p-justify-center\">\n          <Skeleton width=\"100%\" height=\"30px\" className=\"p-mb-2 p-mt-2\" />\n          <Skeleton width=\"100%\" className=\"p-mb-2 p-mt-2\" />\n          <Skeleton width=\"100%\" className=\"p-mb-2 p-mt-2\" />\n        </div>\n      ) : (\n        <div className=\"container title-heading p-text-center\">\n          <h1>{props.data.heading}</h1>\n          <p>{props.data.subheading}</p>\n        </div>\n      )}\n    </div>\n  );\n}\nexport default HeroSection;\n","import React from 'react';\n\n\n\nimport { Dropdown } from 'primereact/dropdown';\nimport { InputText } from 'primereact/inputtext';\nimport { Paginator } from 'primereact/paginator';\nimport { Skeleton } from 'primereact/skeleton';\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\n\n\nexport interface Props extends RouteComponentProps {\n  data: any;\n  categories: any;\n  totalRecords: number;\n}\n\nclass MainSection extends React.Component<Props, {}> {\n  state = {\n    results: [],\n    basicFirst: 0,\n    basicRows: 9,\n    pageNumber: 0,\n    searchKey: '',\n    sortKey: '',\n    loading: true,\n    sortOptions: [],\n  };\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps !== this.props) {\n      this.updateData();\n      this.updateCategory();\n      this.setLoading();\n    }\n  }\n\n  updateData() {\n    const slice: any = [...this.props.data].slice(\n      this.state.pageNumber * this.state.basicRows,\n      this.state.pageNumber * this.state.basicRows + this.state.basicRows\n    );\n    // console.log(slice)\n    this.setState({ results: slice });\n  }\n\n  updateCategory() {\n    const reValueCategory = this.props.categories.map(function (res) {\n      return { id: res.id, label: res.title, value: res.slug };\n    });\n    this.setState({ sortOptions: [...reValueCategory, { id: 0, label: 'All Category', value: 'all' }] });\n  }\n\n  setLoading() {\n    setTimeout(() => {\n      this.setState({ loading: false });\n    }, 700);\n  }\n\n  componentWillUnmount() {}\n\n  onPageChange = event => {\n    this.setState({\n      basicFirst: event.first,\n      pageNumber: event.page,\n    });\n\n    const newSlice: any = [...this.props.data].slice(\n      event.page * this.state.basicRows,\n      event.page * this.state.basicRows + this.state.basicRows\n    );\n    this.setState({ results: newSlice });\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  getSearch = (e: { target: { value: string } }) => {\n    const value = e.target.value;\n    this.setState({ searchKey: value });\n    if (value !== '') {\n      const newBlog = [...this.props.data].filter((data: any) => {\n        return Object.values(data).join(' ').toLowerCase().includes(value.toLowerCase());\n      });\n      this.setState({ results: newBlog });\n    } else {\n      this.setState({ results: this.props.data });\n    }\n  };\n\n  onSortCategory = event => {\n    const value = event.value;\n    this.setState({ sortKey: value });\n    if (value !== 'all') {\n      const updatedItems = [...this.props.data].filter(data => {\n        return !!data.categories.find(c => c.slug === value);\n      });\n      this.setState({ results: updatedItems });\n    } else {\n      this.setState({ results: this.props.data });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <div className=\"container\">\n          <div className=\"filter-section p-grid\">\n            <div className=\"category p-col-12 p-xl-4\">\n              <Dropdown\n                options={this.state.sortOptions}\n                value={this.state.sortKey}\n                placeholder=\"Pilih Kategori\"\n                onChange={this.onSortCategory}\n              />\n            </div>\n            <div className=\"search-container p-col-12 p-xl-4 p-xl-offset-4\">\n              <div className=\"search\">\n                <span className=\"p-input-icon-right\">\n                  <i className=\"pi pi-search\" />\n                  <InputText placeholder=\"Search\" id=\"search\" value={this.state.searchKey} onChange={this.getSearch} />\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"content-section p-pt-4\">\n            {this.state.loading ? (\n              <div className=\"p-grid\">\n                <div className=\"p-col p-md-6 p-xl-4 blog-box\">\n                  <div className=\"blog-cover\">\n                    <Skeleton width=\"100%\" height=\"100%\" />\n                  </div>\n                  <div className=\"blog-heading\">\n                    <Skeleton width=\"75%\" height=\"30px\" className=\"p-mb-2 p-mt-2\" />\n                    <Skeleton width=\"100%\" />\n                  </div>\n                </div>\n                <div className=\"p-col p-md-6 p-xl-4 blog-box\">\n                  <div className=\"blog-cover\">\n                    <Skeleton width=\"100%\" height=\"100%\" />\n                  </div>\n                  <div className=\"blog-heading\">\n                    <Skeleton width=\"75%\" height=\"30px\" className=\"p-mb-2 p-mt-2\" />\n                    <Skeleton width=\"100%\" />\n                  </div>\n                </div>\n                <div className=\"p-col p-md-6 p-xl-4 blog-box\">\n                  <div className=\"blog-cover\">\n                    <Skeleton width=\"100%\" height=\"100%\" />\n                  </div>\n                  <div className=\"blog-heading\">\n                    <Skeleton width=\"75%\" height=\"30px\" className=\"p-mb-2 p-mt-2\" />\n                    <Skeleton width=\"100%\" />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"p-grid\">\n                {this.state.results.map((blog: any, idx) => (\n                  <div key={idx} className=\"p-col p-md-6 p-xl-4 blog-box\">\n                    <div className=\"blog-cover p-shadow-3\">\n                      <ul>\n                        {blog.categories.map((category: any, idx) => (\n                          <li key={idx}>\n                            <div className=\"btn-label-category p-shadow-3\">\n                              <span className=\"label-category\">{category.title}</span>\n                            </div>\n                          </li>\n                        ))}\n                      </ul>\n                      <Link to={`${this.props.match.url}/${blog.slug}`}>\n                        <img src={blog.featured_image} alt={blog.title} />\n                      </Link>\n                    </div>\n                    <div className=\"blog-heading\">\n                      <h1>\n                        <Link to={`${this.props.match.url}/${blog.slug}`}>{blog.title}</Link>\n                      </h1>\n                      <span className=\"meta\">\n                        <i className=\"pi pi-user p-mr-2\"></i>{' '}\n                        {blog.author.username != null ? blog.author.username : 'Unknown'} |{' '}\n                        {new Date(blog.created_at).toDateString()}\n                      </span>\n                      <div className=\"description\">\n                          <div className=\"body\" dangerouslySetInnerHTML={{ __html: blog.body.replace(/src=\"\\/media\\//g, 'src=\"https://karomap.com/media/') }}></div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n\n            <div className=\"paginator-container\">\n              <Paginator\n                first={this.state.basicFirst}\n                rows={this.state.basicRows}\n                totalRecords={this.props.totalRecords}\n                onPageChange={this.onPageChange}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default withRouter(MainSection);\n","import React, { Component } from 'react';\n\n\n\nimport { dataPages } from '../../components/models';\nimport API from '../../components/services';\nimport HeroSection from './hero-section';\nimport MainSection from './main-section';\n\n\nexport interface IndexState {\n  pages: any;\n  blogs: any;\n  categories: any;\n  totalRecords: number;\n}\n\nclass Index extends Component<{}, IndexState> {\n  state: IndexState = {\n    pages: dataPages[2],\n    blogs: [],\n    categories: [],\n    totalRecords: 0,\n  };\n  constructor(props: {}) {\n    super(props);\n\n    this.scrollNavigation = this.scrollNavigation.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.scrollNavigation, true);\n    this.getPostAPI();\n  }\n\n  getPostAPI = () => {\n    API.getCategoryBlogs()\n      .then(result => {\n        this.setState({\n          categories: [...result],\n        });\n      })\n      .catch(e => {\n        console.error(e);\n      });\n    API.getBlogs()\n      .then(result => {\n        const descRes = result.sort((a, b) => a - b).reverse();\n        this.setState({\n          blogs: [...descRes],\n          totalRecords: result.length,\n        });\n      })\n      .catch(e => {\n        console.error(e);\n      });\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.scrollNavigation, true);\n  }\n\n  scrollNavigation = () => {\n    const doc = document.documentElement;\n    const top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    const topnavEl = document.getElementById('topnav');\n    if (top > 80) {\n      topnavEl?.classList.add('nav-sticky');\n    } else {\n      topnavEl?.classList.remove('nav-sticky');\n    }\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <HeroSection data={this.state.pages} />\n        <MainSection\n          data={this.state.blogs}\n          categories={this.state.categories}\n          totalRecords={this.state.blogs.length}\n        />\n      </React.Fragment>\n    );\n  }\n}\nexport default Index;\n"],"sourceRoot":""}