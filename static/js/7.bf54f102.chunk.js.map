{"version":3,"sources":["components/services.tsx","pages/Blogs/Detail/hero-section.tsx","pages/Blogs/Detail/main-section.tsx","pages/Blogs/Detail/index.tsx"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","headers","common","interceptors","request","use","error","console","Promise","reject","Get","path","resolve","get","process","then","result","data","err","API","getBlogs","getDetailPost","slug","getCategoryBlogs","HeroSection","props","blog","className","style","backgroundImage","featured_image","title","Date","created_at","toDateString","MainSection","state","body","author","username","tags","latest","loading","prevProps","this","updateData","setLoading","updateLatest","setState","setTimeout","width","height","map","idx","src","alt","dangerouslySetInnerHTML","__html","slice","shape","size","flex","images","to","description","length","React","Component","IndexDetail","params","dataBlogs","scrollNavigation","doc","document","documentElement","top","window","pageYOffset","scrollTop","clientTop","topnavEl","getElementById","classList","add","remove","bind","getData","addEventListener","history","location","pathname","match","url","removeEventListener","Fragment"],"mappings":"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","file":"static/js/7.bf54f102.chunk.js","sourcesContent":["import axios from 'axios';\n\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\naxios.interceptors.request.use(\n  request => {\n    return request;\n  },\n  error => {\n    console.error(error);\n    return Promise.reject(error);\n  }\n);\n\nconst RootPath = process.env.REACT_APP_API_URL;\n\nconst Get = (path: string) => {\n  return new Promise<any[]>((resolve, reject) => {\n    axios.get(`${RootPath}/${path}`).then(\n      result => {\n        resolve(result.data);\n      },\n      err => {\n        reject(err);\n      }\n    );\n  });\n};\n\n// const getBlogs = () => Get('post/?limit=0&offset=0&type=blogs');\nconst getBlogs = () => Get('post/?limit=0&offset=0&type=blogs');\nconst getDetailPost = slug => Get(`post/${slug}/`);\nconst getCategoryBlogs = () => Get('category/');\n\nconst API = {\n  getBlogs,\n  getDetailPost,\n  getCategoryBlogs,\n};\n\nexport default API;\n","import React from 'react';\n\n\nexport interface Props {\n  data: {\n    id: number;\n    title: string;\n    slug: string;\n    categories: any;\n    featured_image: string;\n    author: {\n      username: string;\n    };\n    created_at: string;\n    updated_at: string;\n  };\n}\nfunction HeroSection(props: Props) {\n  const blog = props.data;\n  return (\n    <div className=\"hero-container\" style={{ backgroundImage: `url(${blog.featured_image})` }}>\n      <div className=\"container title-heading p-text-center\">\n        <h1>{blog.title}</h1>\n        <span className=\"meta\">\n          <i className=\"pi pi-calendar p-mr-2\"></i> {new Date(blog.created_at).toDateString()}\n        </span>\n      </div>\n    </div>\n  );\n}\nexport default HeroSection;\n","import React from 'react';\n\nimport { Skeleton } from 'primereact/skeleton';\nimport { Link } from 'react-router-dom';\n\nexport interface Props {\n  data: {\n    author: any;\n    body: string;\n    categories: any;\n    comment_count: number;\n    configs: string;\n    created_at: string;\n    deleted_at: string;\n    description: string;\n    featured_image: string;\n    id: number;\n    published: boolean;\n    published_at: string;\n    slug: string;\n    tags: any;\n    title: string;\n    type: string;\n    updated_at: string;\n  };\n  latest: any;\n}\nclass MainSection extends React.Component<Props, {}> {\n  state = {\n    data: { title: '', body: '', featured_image: '', author: { username: '' } },\n    tags: [],\n    latest: [],\n    loading: true,\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps !== this.props) {\n      this.updateData();\n      this.setLoading();\n      this.updateLatest();\n    }\n  }\n\n  updateData() {\n    const data = this.props.data;\n    this.setState({\n      data: data,\n      tags: data.tags,\n    });\n  }\n\n  updateLatest() {\n    const data = this.props.latest;\n    this.setState({\n      latest: data,\n    });\n  }\n\n  setLoading() {\n    setTimeout(() => {\n      this.setState({ loading: false });\n    }, 700);\n  }\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <div className=\"container\">\n          <div className=\"content-container p-grid\">\n            <div className=\"left-content p-col p-lg-8\">\n              {this.state.loading ? (\n                <div className=\"heading p-mb-4\">\n                  <Skeleton width=\"75%\" height=\"30px\" className=\"p-mb-2 p-mt-2\" />\n                  <Skeleton width=\"50%\" height=\"10px\" />\n                </div>\n              ) : (\n                <div className=\"heading p-mb-4\">\n                  <h1>{this.state.data.title}</h1>\n                  <div className=\"meta\">\n                    <i className=\"pi pi-user p-mr-2\"></i> {this.state.data.author.username} |{' '}\n                    <i className=\"pi pi-tags\"></i>\n                    <ul>\n                      {this.state.tags.map((data: any, idx) => (\n                        <li className=\"tags\" key={idx}>\n                          {data.title},\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              )}\n              <div className=\"featured-image\">\n                {this.state.loading ? (\n                  <Skeleton width=\"100%\" height=\"100%\" />\n                ) : (\n                  <img src={this.state.data.featured_image} alt={this.state.data.title} />\n                )}\n              </div>\n              {this.state.loading ? (\n                <Skeleton width=\"100%\" />\n              ) : (\n                <p className=\"p-text-justify\" dangerouslySetInnerHTML={{ __html: this.state.data.body }}></p>\n              )}\n            </div>\n            <div className=\"right-content p-col p-lg-4\">\n              <h5>Recent Blogs</h5>\n              <div className=\"custom-skeleton p-pt-4\">\n                <ul className=\"p-m-0 p-p-0\">\n                  {this.state.latest.slice(0, 5).map((data: any, idx) => {\n                    if (this.state.loading) {\n                      return (\n                        <li key={idx} className=\"p-mb-3\">\n                          <div className=\"p-d-flex\">\n                            <Skeleton shape=\"circle\" size=\"4rem\" className=\"p-mr-2\" />\n                            <div style={{ flex: '1' }}>\n                              <Skeleton width=\"100%\" className=\"p-mb-2\" />\n                              <Skeleton width=\"75%\" />\n                            </div>\n                          </div>\n                        </li>\n                      );\n                    } else {\n                      return (\n                        <li key={idx} className=\"p-mb-3\">\n                          <div className=\"p-d-flex blogs\">\n                            <div className=\"thumbnail-blog p-shadow-3\">\n                              <img src={data.images} alt={data.title} />\n                            </div>\n                            <div className=\"heading-blogs\" style={{ flex: '1' }}>\n                              <h1>\n                                <Link to={data.slug}>{data.title}</Link>\n                              </h1>\n                              <p>\n                                {data.description.length > 100\n                                  ? data.description.slice(0, 100) + ','\n                                  : data.description}\n                              </p>\n                            </div>\n                          </div>\n                        </li>\n                      );\n                    }\n                  })}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default MainSection;\n","import React, { Component } from 'react';\n\n\n\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport { dataBlogs } from '../../../components/models';\nimport API from '../../../components/services';\nimport HeroSection from './hero-section';\nimport MainSection from './main-section';\n\nexport interface IndexDetailState {\n  blog: any;\n  latest: any;\n}\n\nclass IndexDetail extends Component<RouteComponentProps, IndexDetailState> {\n  private params: any;\n  state: IndexDetailState = {\n    blog: {},\n    latest: dataBlogs,\n  };\n  constructor(props: any) {\n    super(props);\n    this.scrollNavigation = this.scrollNavigation.bind(this);\n  }\n  componentDidMount() {\n    this.getData();\n    window.addEventListener('scroll', this.scrollNavigation, true);\n  }\n\n  componentDidUpdate(prevProps: RouteComponentProps) {\n    if (prevProps.history.location.pathname !== this.params.match.url) {\n      this.getData();\n    }\n  }\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.scrollNavigation, true);\n  }\n  scrollNavigation = () => {\n    const doc = document.documentElement;\n    const top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    const topnavEl = document.getElementById('topnav');\n    if (top > 80) {\n      topnavEl?.classList.add('nav-sticky');\n    } else {\n      topnavEl?.classList.remove('nav-sticky');\n    }\n  };\n\n  getData() {\n    this.params = this.props;\n    const slug = this.params.match.params.slug;\n    if (this.params.match && slug) {\n      API.getDetailPost(slug).then(result => {\n        this.setState({\n          blog: result,\n        });\n      });\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <HeroSection data={this.state.blog} />\n        <MainSection data={this.state.blog} latest={this.state.latest} />\n      </React.Fragment>\n    );\n  }\n}\nexport default IndexDetail;\n"],"sourceRoot":""}