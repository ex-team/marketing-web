{"version":3,"sources":["pages/Blogs/hero-section.tsx","pages/Blogs/main-section.tsx","pages/Blogs/index.tsx"],"names":["HeroSection","props","className","style","backgroundImage","data","banner","heading","subheading","MainSection","blogs","useState","results","setResults","basicFirst","setBasicFirst","basicRows","pageNumber","setPageNumber","searchKey","setSearchKey","sortKey","setSortKey","loading","setLoading","match","useRouteMatch","useEffect","getData","a","slice","load","setTimeout","clearTimeout","sortOptions","categories","id","label","value","options","placeholder","onChange","event","updatedItems","filter","currentEl","category","toLowerCase","e","target","newBlog","Object","values","join","includes","map","blog","idx","width","height","to","url","slug","src","images","alt","title","author","Date","created_at","toDateString","description","length","first","rows","totalRecords","onPageChange","page","window","scrollTo","top","behavior","Index","state","pages","dataPages","dataBlogs","scrollNavigation","doc","document","documentElement","pageYOffset","scrollTop","clientTop","topnavEl","getElementById","classList","add","remove","bind","addEventListener","this","removeEventListener","Fragment","Component"],"mappings":"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","file":"static/js/7.159bf859.chunk.js","sourcesContent":["import React from \"react\";\n\n\nexport interface Props {\n  data: {\n    id: number;\n    name: string;\n    heading: string;\n    subheading: string;\n    banner: string;\n    title: string;\n    description: string;\n  };\n}\nfunction HeroSection(props: Props) {\n  return (\n    <div className=\"hero-container\" style={{ backgroundImage: `url(${props.data.banner})` }}>\n      <div className=\"container title-heading p-text-center\">\n        <h1>{props.data.heading}</h1>\n        <p>{props.data.subheading}</p>\n      </div>\n    </div>\n  );\n}\nexport default HeroSection;\n","import React, { useEffect, useState } from 'react';\n\nimport { Dropdown } from 'primereact/dropdown';\nimport { InputText } from 'primereact/inputtext';\nimport { Paginator } from 'primereact/paginator';\nimport { Skeleton } from 'primereact/skeleton';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nexport interface Props {\n  data: any;\n  categories: any;\n  totalRecords: number;\n}\nfunction MainSection(props: Props) {\n  const blogs = props.data;\n  const [results, setResults] = useState([]);\n  const [basicFirst, setBasicFirst] = useState(0);\n  const [basicRows] = useState(9);\n  const [pageNumber, setPageNumber] = useState(0);\n  const [searchKey, setSearchKey] = useState('');\n  const [sortKey, setSortKey] = useState('');\n  const [loading, setLoading] = useState(true);\n  const match = useRouteMatch();\n\n  useEffect(() => {\n    const getData = async () => {\n      const data = [...blogs];\n      const slice: any = data.slice(pageNumber * basicRows, pageNumber * basicRows + basicRows);\n      setResults(slice);\n    };\n    const load = setTimeout(() => {\n      setLoading(false);\n    }, 600);\n\n    getData();\n    return () => clearTimeout(load);\n  }, [blogs, basicRows, pageNumber]);\n\n  const onPageChange = event => {\n    setBasicFirst(event.first);\n    setPageNumber(event.page);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  const getSearch = (e: { target: { value: string } }) => {\n    const value = e.target.value;\n    setSearchKey(value);\n    if (value !== '') {\n      const newBlog = blogs.filter((data: any) => {\n        return Object.values(data).join(' ').toLowerCase().includes(value.toLowerCase());\n      });\n      setResults(newBlog);\n    } else {\n      setResults(blogs);\n    }\n  };\n\n  const sortOptions = [...props.categories, { id: 0, label: 'All Category', value: 'all' }];\n  const onSortCategory = event => {\n    const value = event.value;\n    setSortKey(value);\n    if (value !== 'all') {\n      const updatedItems = blogs.filter(currentEl => {\n        return currentEl.category.toLowerCase() === value.toLowerCase();\n      });\n      setResults(updatedItems);\n    } else {\n      setResults(blogs);\n    }\n  };\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"container\">\n        <div className=\"filter-section p-grid\">\n          <div className=\"category p-col p-xl-4\">\n            <Dropdown options={sortOptions} value={sortKey} placeholder=\"Select category\" onChange={onSortCategory} />\n          </div>\n          <div className=\"search-container p-col p-xl-4 p-xl-offset-4\">\n            <div className=\"search\">\n              <span className=\"p-input-icon-right\">\n                <i className=\"pi pi-search\" />\n                <InputText placeholder=\"Search\" id=\"search\" value={searchKey} onChange={getSearch} />\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"content-section p-pt-4\">\n          <div className=\"p-grid\">\n            {results.map((blog: any, idx) => {\n              if (loading) {\n                return (\n                  <div key={idx} className=\"p-col p-md-6 p-xl-4 blog-box\">\n                    <div className=\"blog-cover\">\n                      <Skeleton width=\"100%\" height=\"100%\" />\n                    </div>\n                    <div className=\"blog-heading\">\n                      <Skeleton width=\"75%\" height=\"30px\" className=\"p-mb-2 p-mt-2\" />\n                      <Skeleton width=\"100%\" />\n                    </div>\n                  </div>\n                );\n              } else {\n                return (\n                  <div key={idx} className=\"p-col p-md-6 p-xl-4 blog-box\">\n                    <div className=\"blog-cover p-shadow-3\">\n                      <div className=\"btn-label-category p-shadow-3\">\n                        <span className=\"label-category\">{blog.category}</span>\n                      </div>\n                      <Link to={`${match.url}/${blog.slug}`}>\n                        <img src={blog.images} alt={blog.title} />\n                      </Link>\n                    </div>\n                    <div className=\"blog-heading\">\n                      <h1>\n                        <Link to={`${match.url}/${blog.slug}`}>{blog.title}</Link>\n                      </h1>\n                      <span className=\"meta\">\n                        <i className=\"pi pi-user p-mr-2\"></i> {blog.author} | {new Date(blog.created_at).toDateString()}\n                      </span>\n                      <div className=\"description\">\n                        <p>\n                          {blog.description.length > 100 ? blog.description.slice(0, 100) + '...' : blog.description}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                );\n              }\n            })}\n          </div>\n          <div className=\"paginator-container\">\n            <Paginator\n              first={basicFirst}\n              rows={basicRows}\n              totalRecords={props.totalRecords}\n              onPageChange={onPageChange}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default MainSection;\n","import React, { Component } from 'react';\n\nimport { dataBlogs, dataPages } from '../../components/models';\nimport HeroSection from './hero-section';\nimport MainSection from './main-section';\n\nexport interface IndexState {\n  pages: any;\n  blogs: any;\n  categories: any;\n}\n\nclass Index extends Component<{}, IndexState> {\n  state: IndexState = {\n    pages: dataPages[2],\n    blogs: dataBlogs,\n    categories: [\n      { id: 1, label: 'Articles', value: 'articles' },\n      { id: 2, label: 'Blogs', value: 'blogs' },\n      { id: 3, label: 'News', value: 'news' },\n    ],\n  };\n  constructor(props: {}) {\n    super(props);\n\n    this.scrollNavigation = this.scrollNavigation.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.scrollNavigation, true);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.scrollNavigation, true);\n  }\n  scrollNavigation = () => {\n    const doc = document.documentElement;\n    const top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    const topnavEl = document.getElementById('topnav');\n    if (top > 80) {\n      topnavEl?.classList.add('nav-sticky');\n    } else {\n      topnavEl?.classList.remove('nav-sticky');\n    }\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <HeroSection data={this.state.pages} />\n        <MainSection data={this.state.blogs} categories={this.state.categories} totalRecords={dataBlogs.length} />\n      </React.Fragment>\n    );\n  }\n}\nexport default Index;\n"],"sourceRoot":""}