{"version":3,"sources":["components/services.tsx","pages/Blogs/hero-section.tsx","pages/Blogs/main-section.tsx","pages/Blogs/index.tsx"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","headers","common","interceptors","request","use","error","console","Promise","reject","Get","path","resolve","get","process","then","result","data","err","API","getBlogs","getDetailPost","slug","getCategoryBlogs","HeroSection","props","className","style","backgroundImage","banner","heading","subheading","MainSection","state","results","basicFirst","basicRows","pageNumber","searchKey","sortKey","loading","sortOptions","onPageChange","event","setState","first","page","window","scrollTo","top","behavior","getSearch","e","value","target","newBlog","filter","Object","values","join","toLowerCase","includes","onSortCategory","updatedItems","currentEl","categories","log","category","prevProps","this","updateData","updateCategory","setLoading","slice","reValueCategory","map","res","id","label","title","setTimeout","options","placeholder","onChange","width","height","blog","idx","to","match","url","src","featured_image","alt","author","username","Date","created_at","toDateString","dangerouslySetInnerHTML","__html","body","rows","totalRecords","React","Component","withRouter","Index","pages","dataPages","blogs","getPostAPI","catch","length","scrollNavigation","doc","document","documentElement","pageYOffset","scrollTop","clientTop","topnavEl","getElementById","classList","add","remove","bind","addEventListener","removeEventListener","Fragment"],"mappings":"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","file":"static/js/8.cb3fe6b3.chunk.js","sourcesContent":["import axios from 'axios';\n\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\naxios.interceptors.request.use(\n  request => {\n    return request;\n  },\n  error => {\n    console.error(error);\n    return Promise.reject(error);\n  }\n);\n\nconst RootPath = process.env.REACT_APP_API_URL;\n\nconst Get = (path: string) => {\n  return new Promise<any[]>((resolve, reject) => {\n    axios.get(`${RootPath}/${path}`).then(\n      result => {\n        resolve(result.data);\n      },\n      err => {\n        reject(err);\n      }\n    );\n  });\n};\n\n// const getBlogs = () => Get('post/?limit=0&offset=0&type=blogs');\nconst getBlogs = () => Get('post/?limit=0&offset=0&type=blogs');\nconst getDetailPost = slug => Get(`post/${slug}/`);\nconst getCategoryBlogs = () => Get('category/');\n\nconst API = {\n  getBlogs,\n  getDetailPost,\n  getCategoryBlogs,\n};\n\nexport default API;\n","import React from \"react\";\n\n\nexport interface Props {\n  data: {\n    id: number;\n    name: string;\n    heading: string;\n    subheading: string;\n    banner: string;\n    title: string;\n    description: string;\n  };\n}\nfunction HeroSection(props: Props) {\n  return (\n    <div className=\"hero-container\" style={{ backgroundImage: `url(${props.data.banner})` }}>\n      <div className=\"container title-heading p-text-center\">\n        <h1>{props.data.heading}</h1>\n        <p>{props.data.subheading}</p>\n      </div>\n    </div>\n  );\n}\nexport default HeroSection;\n","import React from 'react';\n\nimport { Dropdown } from 'primereact/dropdown';\nimport { InputText } from 'primereact/inputtext';\nimport { Paginator } from 'primereact/paginator';\nimport { Skeleton } from 'primereact/skeleton';\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\n\nexport interface Props extends RouteComponentProps {\n  data: any;\n  categories: any;\n  totalRecords: number;\n}\n\nclass MainSection extends React.Component<Props, {}> {\n  state = {\n    results: [],\n    basicFirst: 0,\n    basicRows: 9,\n    pageNumber: 0,\n    searchKey: '',\n    sortKey: '',\n    loading: true,\n    sortOptions: [],\n  };\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps !== this.props) {\n      this.updateData();\n      this.updateCategory();\n      this.setLoading();\n    }\n  }\n\n  updateData() {\n    const slice: any = [...this.props.data].slice(\n      this.state.pageNumber * this.state.basicRows,\n      this.state.pageNumber * this.state.basicRows + this.state.basicRows\n    );\n    this.setState({ results: slice });\n  }\n\n  updateCategory() {\n    const reValueCategory = this.props.categories.map(function (res) {\n      return { id: res.id, label: res.title, value: res.slug };\n    });\n    this.setState({ sortOptions: [...reValueCategory, { id: 0, label: 'All Category', value: 'all' }] });\n  }\n\n  setLoading() {\n    setTimeout(() => {\n      this.setState({ loading: false });\n    }, 700);\n  }\n\n  componentWillUnmount() {}\n\n  onPageChange = event => {\n    this.setState({\n      basicFirst: event.first,\n      pageNumber: event.page,\n    });\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  getSearch = (e: { target: { value: string } }) => {\n    const value = e.target.value;\n    this.setState({ searchKey: value });\n    if (value !== '') {\n      const newBlog = [...this.props.data].filter((data: any) => {\n        return Object.values(data).join(' ').toLowerCase().includes(value.toLowerCase());\n      });\n      this.setState({ results: newBlog });\n    } else {\n      this.setState({ results: this.props.data });\n    }\n  };\n\n  onSortCategory = event => {\n    const value = event.value;\n    this.setState({ sortKey: value });\n\n    if (value !== 'all') {\n      const updatedItems = [...this.props.data].filter(\n        currentEl =>\n          currentEl.categories.filter((e: any) => {\n            console.log(e);\n            return e.category.toLowerCase() === value.toLowerCase();\n          })\n        // console.log(currentEl);\n        // return currentEl.category.toLowerCase() === value.toLowerCase();\n      );\n      this.setState({ results: updatedItems });\n    } else {\n      this.setState({ results: this.props.data });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <div className=\"container\">\n          <div className=\"filter-section p-grid\">\n            <div className=\"category p-col p-xl-4\">\n              <Dropdown\n                options={this.state.sortOptions}\n                value={this.state.sortKey}\n                placeholder=\"Select category\"\n                onChange={this.onSortCategory}\n              />\n            </div>\n            <div className=\"search-container p-col p-xl-4 p-xl-offset-4\">\n              <div className=\"search\">\n                <span className=\"p-input-icon-right\">\n                  <i className=\"pi pi-search\" />\n                  <InputText placeholder=\"Search\" id=\"search\" value={this.state.searchKey} onChange={this.getSearch} />\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"content-section p-pt-4\">\n            {this.state.loading ? (\n              <div className=\"p-grid\">\n                <div className=\"p-col p-md-6 p-xl-4 blog-box\">\n                  <div className=\"blog-cover\">\n                    <Skeleton width=\"100%\" height=\"100%\" />\n                  </div>\n                  <div className=\"blog-heading\">\n                    <Skeleton width=\"75%\" height=\"30px\" className=\"p-mb-2 p-mt-2\" />\n                    <Skeleton width=\"100%\" />\n                  </div>\n                </div>\n                <div className=\"p-col p-md-6 p-xl-4 blog-box\">\n                  <div className=\"blog-cover\">\n                    <Skeleton width=\"100%\" height=\"100%\" />\n                  </div>\n                  <div className=\"blog-heading\">\n                    <Skeleton width=\"75%\" height=\"30px\" className=\"p-mb-2 p-mt-2\" />\n                    <Skeleton width=\"100%\" />\n                  </div>\n                </div>\n                <div className=\"p-col p-md-6 p-xl-4 blog-box\">\n                  <div className=\"blog-cover\">\n                    <Skeleton width=\"100%\" height=\"100%\" />\n                  </div>\n                  <div className=\"blog-heading\">\n                    <Skeleton width=\"75%\" height=\"30px\" className=\"p-mb-2 p-mt-2\" />\n                    <Skeleton width=\"100%\" />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"p-grid\">\n                {this.state.results.map((blog: any, idx) => (\n                  <div key={idx} className=\"p-col p-md-6 p-xl-4 blog-box\">\n                    <div className=\"blog-cover p-shadow-3\">\n                      {blog.category != null && (\n                        <div className=\"btn-label-category p-shadow-3\">\n                          <span className=\"label-category\">{blog.category}</span>\n                        </div>\n                      )}\n                      <Link to={`${this.props.match.url}/${blog.slug}`}>\n                        <img src={blog.featured_image} alt={blog.title} />\n                      </Link>\n                    </div>\n                    <div className=\"blog-heading\">\n                      <h1>\n                        <Link to={`${this.props.match.url}/${blog.slug}`}>{blog.title}</Link>\n                      </h1>\n                      <span className=\"meta\">\n                        <i className=\"pi pi-user p-mr-2\"></i>{' '}\n                        {blog.author.username != null ? blog.author.username : 'Unknown'} |{' '}\n                        {new Date(blog.created_at).toDateString()}\n                      </span>\n                      <div className=\"description\">\n                        <div className=\"body\" dangerouslySetInnerHTML={{ __html: blog.body }}></div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n\n            <div className=\"paginator-container\">\n              <Paginator\n                first={this.state.basicFirst}\n                rows={this.state.basicRows}\n                totalRecords={this.props.totalRecords}\n                onPageChange={this.onPageChange}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default withRouter(MainSection);\n","import React, { Component } from 'react';\n\n\n\nimport { dataPages } from '../../components/models';\nimport API from '../../components/services';\nimport HeroSection from './hero-section';\nimport MainSection from './main-section';\n\nexport interface IndexState {\n  pages: any;\n  blogs: any;\n  categories: any;\n  totalRecords: number;\n}\n\nclass Index extends Component<{}, IndexState> {\n  state: IndexState = {\n    pages: dataPages[2],\n    blogs: [],\n    categories: [],\n    totalRecords: 0,\n  };\n  constructor(props: {}) {\n    super(props);\n\n    this.scrollNavigation = this.scrollNavigation.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.scrollNavigation, true);\n    this.getPostAPI();\n  }\n\n  getPostAPI = () => {\n    API.getCategoryBlogs()\n      .then(result => {\n        this.setState({\n          categories: [...result],\n        });\n      })\n      .catch(e => {\n        console.error(e);\n      });\n    API.getBlogs()\n      .then(result => {\n        this.setState({\n          blogs: [...result],\n          totalRecords: result.length,\n        });\n      })\n      .catch(e => {\n        console.error(e);\n      });\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.scrollNavigation, true);\n  }\n\n  scrollNavigation = () => {\n    const doc = document.documentElement;\n    const top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    const topnavEl = document.getElementById('topnav');\n    if (top > 80) {\n      topnavEl?.classList.add('nav-sticky');\n    } else {\n      topnavEl?.classList.remove('nav-sticky');\n    }\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <HeroSection data={this.state.pages} />\n        <MainSection\n          data={this.state.blogs}\n          categories={this.state.categories}\n          totalRecords={this.state.blogs.length}\n        />\n      </React.Fragment>\n    );\n  }\n}\nexport default Index;\n"],"sourceRoot":""}